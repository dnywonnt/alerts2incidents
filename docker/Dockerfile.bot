# Builder stage
# This stage installs all dependencies and builds the application.
FROM golang:1.22 AS builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source code into the container
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o bot ./cmd/bot

# Final stage
# This stage builds the final image with compiled binary from the builder stage.
FROM alpine:3.19

# Update APK repositories
RUN apk --no-cache add ca-certificates

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy the Pre-built binary file and the templates directory from the previous stage
COPY --from=builder /app/bot /app/
COPY --from=builder /app/templates /app/templates

# Command to run the executable
CMD ["./bot"]
